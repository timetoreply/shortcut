<?php
/**
 * HistoryActionStoryCreateTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Timetoreply\Shortcut
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Shortcut API
 *
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.43-SNAPSHOT
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Timetoreply\Shortcut;

use PHPUnit\Framework\TestCase;

/**
 * HistoryActionStoryCreateTest Class Doc Comment
 *
 * @category    Class
 * @description An action representing a Story being created.
 * @package     Timetoreply\Shortcut
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class HistoryActionStoryCreateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "HistoryActionStoryCreate"
     */
    public function testHistoryActionStoryCreate()
    {
    }

    /**
     * Test attribute "appUrl"
     */
    public function testPropertyAppUrl()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "started"
     */
    public function testPropertyStarted()
    {
    }

    /**
     * Test attribute "entityType"
     */
    public function testPropertyEntityType()
    {
    }

    /**
     * Test attribute "taskIds"
     */
    public function testPropertyTaskIds()
    {
    }

    /**
     * Test attribute "storyType"
     */
    public function testPropertyStoryType()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "completed"
     */
    public function testPropertyCompleted()
    {
    }

    /**
     * Test attribute "blocker"
     */
    public function testPropertyBlocker()
    {
    }

    /**
     * Test attribute "epicId"
     */
    public function testPropertyEpicId()
    {
    }

    /**
     * Test attribute "requestedById"
     */
    public function testPropertyRequestedById()
    {
    }

    /**
     * Test attribute "iterationId"
     */
    public function testPropertyIterationId()
    {
    }

    /**
     * Test attribute "labelIds"
     */
    public function testPropertyLabelIds()
    {
    }

    /**
     * Test attribute "groupId"
     */
    public function testPropertyGroupId()
    {
    }

    /**
     * Test attribute "workflowStateId"
     */
    public function testPropertyWorkflowStateId()
    {
    }

    /**
     * Test attribute "objectStoryLinkIds"
     */
    public function testPropertyObjectStoryLinkIds()
    {
    }

    /**
     * Test attribute "followerIds"
     */
    public function testPropertyFollowerIds()
    {
    }

    /**
     * Test attribute "ownerIds"
     */
    public function testPropertyOwnerIds()
    {
    }

    /**
     * Test attribute "customFieldValueIds"
     */
    public function testPropertyCustomFieldValueIds()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "estimate"
     */
    public function testPropertyEstimate()
    {
    }

    /**
     * Test attribute "subjectStoryLinkIds"
     */
    public function testPropertySubjectStoryLinkIds()
    {
    }

    /**
     * Test attribute "action"
     */
    public function testPropertyAction()
    {
    }

    /**
     * Test attribute "blocked"
     */
    public function testPropertyBlocked()
    {
    }

    /**
     * Test attribute "projectId"
     */
    public function testPropertyProjectId()
    {
    }

    /**
     * Test attribute "deadline"
     */
    public function testPropertyDeadline()
    {
    }
}
