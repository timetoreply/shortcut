<?php
/**
 * BranchTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Timetoreply\Shortcut
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Shortcut API
 *
 * Shortcut API
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.43-SNAPSHOT
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Timetoreply\Shortcut;

use PHPUnit\Framework\TestCase;

/**
 * BranchTest Class Doc Comment
 *
 * @category    Class
 * @description Branch refers to a VCS branch. Branches are feature branches associated with Shortcut Stories.
 * @package     Timetoreply\Shortcut
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BranchTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Branch"
     */
    public function testBranch()
    {
    }

    /**
     * Test attribute "entityType"
     */
    public function testPropertyEntityType()
    {
    }

    /**
     * Test attribute "deleted"
     */
    public function testPropertyDeleted()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "persistent"
     */
    public function testPropertyPersistent()
    {
    }

    /**
     * Test attribute "updatedAt"
     */
    public function testPropertyUpdatedAt()
    {
    }

    /**
     * Test attribute "pullRequests"
     */
    public function testPropertyPullRequests()
    {
    }

    /**
     * Test attribute "mergedBranchIds"
     */
    public function testPropertyMergedBranchIds()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "url"
     */
    public function testPropertyUrl()
    {
    }

    /**
     * Test attribute "repositoryId"
     */
    public function testPropertyRepositoryId()
    {
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
    }
}
